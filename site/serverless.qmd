---
title: "Serverless Apps"
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(python.reticulate = FALSE)
```

## Serverless

For simpler applications, you can make use of a library of visualizations (maps, tables, charts) and transformations (filters, sampling, add columns) that run directly in the browser and do not require a server at all.

The following examples showcases an application filtering the iris dataset with a dropdown and a custom filter expression running directly in the browser.

::: {.panel-tabset}

## R

```{r, eval = FALSE}
library(hal9)

h9_create() |>
  h9_load(iris) |>
  h9_dropdown(values = "versicolor,setosa,virginica") |>
  h9_filter(field = "Species", expression = "field == outputs.dropdown") |>
  h9_scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species")
```

## Python

```{python, eval = FALSE}
import hal9 as h9

(h9.create()
  .load(iris)
  .dropdown(values = "versicolor,setosa,virginica")
  .filter(field = "Species", expression = "field == outputs.dropdown")
  .scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species"))
```

:::

```{r, echo = FALSE}
library(hal9)

h9_create(environment = "devel") |>
  h9_load(iris) |>
  h9_dropdown(values = "versicolor,setosa,virginica") |>
  h9_filter(field = "Species", expression = "field == outputs.dropdown") |>
  h9_scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species")
```

This second example makes use of the `rebind` parameter to bind controls to specific properties in subsequent components. Notice that dragging the slider is very responsive since this code runs entirely in the browser using JavaScript native technologies, it avoid using WASM which is not compatible with all browsers and requires significant bandwith not suitable for mobile usage.

::: {.panel-tabset}

## R

```{r, eval = FALSE}
h9_create() |>
  h9_load(dataset = iris) |>
  h9_slider(value = "70", max = "100") |>
  h9_sample(rebind = list(samplesize = "slider")) |>
  h9_scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species")
```

## Python

```{python, eval = FALSE}
(h9.create()
  .load(dataset = iris) |>
  .slider(value = "70", max = "100") |>
  .sample(rebind = { samplesize = "slider" }) |>
  .scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species"))
```

:::


```{r}
#| echo: false

h9_create(environment = "devel") |>
  h9_load(dataset = iris) |>
  h9_slider(value = "70", max = "100") |>
  h9_sample(rebind = list(samplesize = "slider")) |>
  h9_scatter_chart(x = "Sepal.Length", y = "Sepal.Width", color = "Species")
```

